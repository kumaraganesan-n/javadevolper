[{"D:\\Fullstack\\project1\\front-end\\src\\index.js":"1","D:\\Fullstack\\project1\\front-end\\src\\ganesh.js":"2","D:\\Fullstack\\project1\\front-end\\src\\kumaran.js":"3","D:\\Fullstack\\project1\\front-end\\src\\style.js":"4","D:\\Fullstack\\project1\\front-end\\src\\Bootsample.js":"5","D:\\Fullstack\\project1\\front-end\\src\\app.js":"6","D:\\Fullstack\\project1\\front-end\\src\\form.js":"7","D:\\Fullstack\\project1\\front-end\\src\\pics.js":"8","D:\\Fullstack\\project1\\front-end\\src\\home.js":"9","D:\\Fullstack\\project1\\front-end\\src\\API.js":"10","D:\\Fullstack\\project1\\front-end\\src\\Home.js":"11","D:\\Fullstack\\project1\\front-end\\src\\NewResource.js":"12","D:\\Fullstack\\project1\\front-end\\src\\Read.js":"13","D:\\Fullstack\\project1\\front-end\\src\\Update.js":"14","D:\\Fullstack\\project1\\front-end\\src\\Connect.js":"15"},{"size":170,"mtime":1649658016111,"results":"16","hashOfConfig":"17"},{"size":103,"mtime":1646372214440,"results":"18","hashOfConfig":"17"},{"size":99,"mtime":1646372214533,"results":"19","hashOfConfig":"17"},{"size":183,"mtime":1646388731267,"results":"20","hashOfConfig":"17"},{"size":1165,"mtime":1646630732261,"results":"21","hashOfConfig":"17"},{"size":372,"mtime":1646728678114,"results":"22","hashOfConfig":"17"},{"size":3459,"mtime":1648449723033,"results":"23","hashOfConfig":"17"},{"size":207,"mtime":1646735779383,"results":"24","hashOfConfig":"17"},{"size":2696,"mtime":1647931261941,"results":"25","hashOfConfig":"17"},{"size":1142,"mtime":1649657998060,"results":"26","hashOfConfig":"17"},{"size":6443,"mtime":1649657977839,"results":"27","hashOfConfig":"17"},{"size":4991,"mtime":1649658006908,"results":"28","hashOfConfig":"17"},{"size":1224,"mtime":1649659074461,"results":"29","hashOfConfig":"17"},{"size":4596,"mtime":1649657986259,"results":"30","hashOfConfig":"17"},{"size":623,"mtime":1649661126652,"results":"31","hashOfConfig":"17"},{"filePath":"32","messages":"33","suppressedMessages":"34","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},"1l5iqdm",{"filePath":"36","messages":"37","suppressedMessages":"38","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"39","messages":"40","suppressedMessages":"41","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"42","messages":"43","suppressedMessages":"44","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"45","messages":"46","suppressedMessages":"47","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"48","messages":"49","suppressedMessages":"50","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"51","messages":"52","suppressedMessages":"53","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"55","messages":"56","suppressedMessages":"57","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"59"},{"filePath":"60","messages":"61","suppressedMessages":"62","errorCount":1,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"63","messages":"64","suppressedMessages":"65","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},{"filePath":"66","messages":"67","suppressedMessages":"68","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69","usedDeprecatedRules":"35"},{"filePath":"70","messages":"71","suppressedMessages":"72","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"35"},{"filePath":"74","messages":"75","suppressedMessages":"76","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77","usedDeprecatedRules":"35"},{"filePath":"78","messages":"79","suppressedMessages":"80","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81","usedDeprecatedRules":"35"},{"filePath":"82","messages":"83","suppressedMessages":"84","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\Fullstack\\project1\\front-end\\src\\index.js",[],[],["85","86"],"D:\\Fullstack\\project1\\front-end\\src\\ganesh.js",[],[],"D:\\Fullstack\\project1\\front-end\\src\\kumaran.js",[],[],"D:\\Fullstack\\project1\\front-end\\src\\style.js",["87"],[],"D:\\Fullstack\\project1\\front-end\\src\\Bootsample.js",[],[],"D:\\Fullstack\\project1\\front-end\\src\\app.js",["88"],[],"D:\\Fullstack\\project1\\front-end\\src\\form.js",[],[],["89","90"],"D:\\Fullstack\\project1\\front-end\\src\\pics.js",["91"],[],"import React from \"react\";\r\nimport { Recruite } from \"./form\";\r\n\r\nexport const Pic=()=>{\r\n\r\n\r\n    return(\r\n        <>\r\n        <img src=\"Images/building.jpg\"/>\r\n        <Recruite/>\r\n        </>\r\n\r\n\r\n    )\r\n}",["92","93"],"D:\\Fullstack\\project1\\front-end\\src\\home.js",["94","95"],[],"D:\\Fullstack\\project1\\front-end\\src\\API.js",[],[],"D:\\Fullstack\\project1\\front-end\\src\\Home.js",["96","97","98","99","100"],[],"import React, { useEffect, useState } from \"react\";\r\nimport \"../node_modules/bootstrap/dist/css/bootstrap.min.css\"\r\nimport \"../node_modules/bootstrap-icons/font/bootstrap-icons.css\"\r\nimport { byName, fetchExact, list, read, wash } from \"./API\";\r\nimport { Recruite } from \"./NewResource\";\r\nimport { Read } from \"./Read\";\r\nimport { Update } from \"./Update\";\r\nimport { erase, gather } from \"./Connect\";\r\n\r\nexport const Home=()=>{\r\n\r\n    const[tmpArray,setTmpArray]=useState([])\r\n    const[createView,setCreateView]=useState(false)\r\n    const[readView,setReadView]=useState(false)\r\n    const[updateView,setUpdateView]=useState(false)\r\n    const[pos,setPos]=useState(0)\r\n    const[obj,setObj]=useState({})\r\n\r\n    const hello=async()=>{\r\n        const t = await gather();\r\n        setTmpArray(t.data)\r\n    }\r\n\r\n    const toErase=async(value)=>{\r\n        const hey=await erase(value)\r\n        alert(hey.data)\r\n        window.location.assign(\"/\")\r\n    }\r\n\r\n    useEffect(()=>{\r\n        hello()\r\n    },[])\r\n\r\n    return(\r\n        <>\r\n            {/* <Read who=\"2\"/> */}\r\n            {/* <Update who=\"3\"/> */}\r\n            <div className=\"container mt-5\">\r\n                {/* <button onClick={hello}>\r\n                    View\r\n                </button> */}\r\n                {(createView)?\r\n                <>\r\n                    <Recruite/>\r\n                    <button className=\"btn btn-outline-secondary\" onClick={\r\n                        ()=>{\r\n                            setCreateView(false)\r\n                            window.location.assign(\"/\")\r\n                        }\r\n                    }>\r\n                        <i className=\"bi bi-skip-backward-btn-fill\"></i> Back\r\n                    </button>\r\n                </>\r\n                :\r\n                (updateView)?\r\n                <>\r\n                    <Update mention={obj}/>\r\n                    <button className=\"btn btn-outline-secondary\" onClick={\r\n                        ()=>{\r\n                            setUpdateView(false)\r\n                            window.location.assign(\"/\")\r\n                        }\r\n                    }>\r\n                        <i className=\"bi bi-skip-backward-btn-fill\"></i> Back\r\n                    </button>\r\n                </>\r\n                :\r\n                (readView)?\r\n                <>\r\n                <Read who={pos}/>\r\n                    <button className=\"btn btn-outline-secondary\" onClick={\r\n                        ()=>{\r\n                            setReadView(false)\r\n                        }\r\n                    }>\r\n                        <i className=\"bi bi-skip-backward-btn-fill\"></i> Back\r\n                    </button>\r\n                </>\r\n                :\r\n                <>\r\n                    <button className=\"btn btn-outline-success mb-3\"\r\n                        onClick={()=>{\r\n                            setCreateView(true)\r\n                        }}>\r\n                        <i className=\"bi bi-person-plus-fill\"></i> New\r\n                    </button>\r\n                    <div className=\"row justify-content-center\">\r\n                        <div className=\"table-responsive-md\">\r\n                            <table className=\"col-lg-8 col-md-10 col-sm-12 table table-striped p-3 shadow rounded\">\r\n                                <thead>\r\n                                    <tr>\r\n                                        <th>Employee Name</th>\r\n                                        <th>Employee Place</th>\r\n                                        <th>Employee Commercials</th>\r\n                                        <th>Employee Skills</th>\r\n                                        <th>Actions</th>\r\n                                    </tr>\r\n                                </thead>\r\n                                <tbody>\r\n                                    {tmpArray.map((ele,index)=>(\r\n                                        <tr>\r\n                                            <td>\r\n                                                <button className=\"btn btn-outline-primary\" onClick={()=>{\r\n                                                    setReadView(true)\r\n                                                    setPos(ele.resId)\r\n                                                }}>\r\n                                                    <i className=\"bi bi-book-half\"></i>\r\n                                                </button>\r\n                                                {ele.resName}\r\n                                            </td>\r\n                                            <td>{ele.resArea}</td>\r\n                                            <td>{ele.resPay}</td>\r\n                                            <td>{ele.resSkills}</td>\r\n                                            <td>\r\n                                                <button className=\"btn btn-outline-warning rounded-circle\"\r\n                                                onClick={()=>{\r\n                                                    setUpdateView(true)\r\n                                                    //setPos(index)\r\n                                                    //const y=fetchExact(ele.resName)\r\n                                                    setObj(ele)\r\n                                                }}>\r\n                                                    Edit <i className=\"bi bi-pencil-fill\"></i>\r\n                                                </button>\r\n                                            </td>\r\n                                            <td>\r\n                                                <button className=\"btn btn-outline-danger rounded-circle\"\r\n                                                onClick={()=>{\r\n                                                    //setTmpArray(wash(index))\r\n                                                    toErase(ele.resId)\r\n                                                }}>\r\n                                                    Delete <i className=\"bi bi-trash-fill\"></i>\r\n                                                </button>\r\n                                            </td>\r\n                                        </tr>\r\n                                    ))}\r\n                                </tbody>\r\n                            </table>\r\n                        </div>\r\n                    </div>\r\n                </>\r\n                }\r\n            </div>\r\n        </>\r\n    )\r\n}","D:\\Fullstack\\project1\\front-end\\src\\NewResource.js",["101","102","103"],[],"import React, { useState } from \"react\"\r\nimport \"../node_modules/bootstrap/dist/css/bootstrap.min.css\"\r\nimport {create, list} from './API'\r\nimport { join } from \"./Connect\"\r\nexport const Recruite=()=>{\r\n    //const[data,setData]=useState(initialization)\r\n    // person['resName']\r\n    // person.resName\r\n    const[person,setPerson]=useState({\r\n        \"resName\":\"\",\r\n        \"resPay\":0,\r\n        \"resArea\":\"\",\r\n        \"resSkills\":new Array()\r\n    })\r\n\r\n    const tracks=(hey)=>{\r\n        const{value}=hey.target\r\n        person.resSkills.push(value)\r\n    }\r\n\r\n    const track=(manoj)=>{\r\n        // extraction\r\n        const{name,value}=manoj.target\r\n        setPerson(\r\n            (prev)=>{\r\n                return{\r\n                    ...prev,\r\n                    [name]:value\r\n                }\r\n            }\r\n        )\r\n    }\r\n\r\n    const gopi=async()=>{\r\n        //alert(\"Hired \"+JSON.stringify(person))\r\n        //create(person)\r\n        const yet=await join(person);\r\n        alert(yet.data)\r\n    }\r\n    const dhana=()=>{\r\n        alert(\"Rejected\")\r\n    }\r\n    return(\r\n        <>\r\n            <div className=\"container-fluid mt-5\">\r\n                <h1 className=\"text-center text-info display-4 text-uppercase font-monospace\">New Recruitment</h1>\r\n                <div className=\"row justify-content-center\">\r\n                    <div className=\"col-lg-7 col-md-10 col-sm-12 shadow-lg p-3\">\r\n                        <div className=\"form group\">\r\n                            <label>Resource Name</label>\r\n                            <input type=\"text\" \r\n                                name=\"resName\" \r\n                                onChange={track}\r\n                                value={person.resName}\r\n                                placeholder=\"Name of the resource person\"\r\n                                className=\"form-control\"\r\n                            />\r\n                        </div>\r\n                        \r\n                        <div className=\"row justify-content-between\">\r\n                            <div className=\"col-md-6 col-sm-12\">\r\n                                <label>Resource Commercial</label>\r\n                                <input\r\n                                    onChange={track}\r\n                                    type=\"number\"\r\n                                    value={person.resPay}\r\n                                    name=\"resPay\"\r\n                                    placeholder=\"Commercial perday of the resource person\"\r\n                                    className=\"form-control\"\r\n                                />\r\n                            </div>\r\n                            <div className=\"col-md-6 col-sm-12\">\r\n                                <label>Resource Location</label>\r\n                                <select name=\"resArea\" \r\n                                    className=\"form-select\" \r\n                                    onChange={track}\r\n                                    value={person.resArea}>\r\n                                    <option>Select Location</option>\r\n                                    <option>Chennai</option>\r\n                                    <option>Banglore</option>\r\n                                    <option>Salem</option>\r\n                                    <option>Other</option>\r\n                                </select>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"form-check-inline\">\r\n                            <label className=\"me-sm-5 me-lg-5\">Resource skill</label>\r\n                            <input \r\n                                type=\"checkbox\" \r\n                                name=\"java\" \r\n                                onChange={tracks}\r\n                                value=\"Java\" \r\n                                className=\"form-check-input\"/>Java\r\n                            <input \r\n                                type=\"checkbox\" \r\n                                name=\"python\"\r\n                                onChange={tracks}\r\n                                value=\"Python\"\r\n                                className=\"form-check-input ms-sm-5 ms-md-5 ms-lg-5\"/>Python\r\n                            <input \r\n                                type=\"checkbox\" \r\n                                name=\"javascript\"\r\n                                onChange={tracks}\r\n                                value=\"Java Script\" \r\n                                className=\"form-check-input ms-sm-5 ms-md-5 ms-lg-5\"/>Java Script\r\n                        </div>\r\n\r\n                        <div className=\"mt-4 row justify-content-around\">\r\n                            <button onClick={gopi} className=\"col-2 btn btn-outline-success\">Hire</button>\r\n                            <button onClick={dhana} className=\"col-2 btn btn-outline-danger\">Cancel</button>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}","D:\\Fullstack\\project1\\front-end\\src\\Read.js",["104"],[],"import React, { useEffect, useState } from \"react\";\r\nimport { read } from \"./API\";\r\nimport { reachOne } from \"./Connect\";\r\n\r\nexport const Read=(arthi)=>{\r\n\r\n    const[employee,setEmployee]=useState({\r\n        \"resName\":\"\",\r\n        \"resArea\":\"\",\r\n        \"resPay\":0,\r\n        \"resSkills\":[],\r\n        \"resId\":0\r\n    })\r\n\r\n    useEffect(()=>{\r\n        callReading()\r\n    })\r\n\r\n    const callReading=async()=>{\r\n        const t = await reachOne(arthi.who)\r\n        setEmployee(t.data)\r\n    }\r\n\r\n    return(\r\n        <>\r\n            <div className=\"container mt-5\">\r\n                <div className=\"row justify-content-center\">\r\n                    <div className=\"card col-lg-7 col-md-10 col-sm-12 p-4 bg-dark text-light\">\r\n                        <h1 className=\"card-title text-center\">{employee.resName}</h1>\r\n                        <div className=\"card-body\">\r\n                            <p className=\"float-start\">{employee.resArea}</p>\r\n                            <p className=\"float-end\">{employee.resPay}</p>\r\n                            <p className=\"text-center\">{employee.resSkills}</p>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}","D:\\Fullstack\\project1\\front-end\\src\\Update.js",["105","106","107","108","109"],[],"import React, { useEffect, useState } from \"react\";\r\nimport { alter } from \"./API\";\r\nimport { updateOne } from \"./Connect\";\r\n\r\nexport const Update=(annamalai)=>{\r\n\r\n    //alert(JSON.stringify(annamalai))\r\n\r\n    const[pos,setPos]=useState(annamalai.who)\r\n\r\n    const[person,setPerson]=useState({\r\n        \"resId\":annamalai.mention.resId,\r\n        \"resName\":annamalai.mention.resName,\r\n        \"resPay\":annamalai.mention.resPay,\r\n        \"resArea\":annamalai.mention.resArea,\r\n        \"resSkills\":annamalai.mention.resSkills\r\n    })\r\n    useEffect(()=>{\r\n        let wind=\"\"\r\n        person.resSkills.map((content)=>{\r\n            wind+=content+\",\"\r\n        }\r\n        )\r\n        //replace reskilles form array ti simple text /string\r\n        person.resSkills=wind\r\n\r\n    },[])\r\n\r\n    const gopi=async()=>{\r\n        //alter(pos,person)\r\n        person.resSkills=person.resSkills.split(\",\")\r\n       const t= await updateOne(person)\r\n       alert(t.data)\r\n    }\r\n    const dhana=()=>{\r\n        alert(\"Rejected\")\r\n    }\r\n\r\n    const track=(manoj)=>{\r\n        //console.log(manoj.target.value);\r\n        // extraction\r\n        const{name,value}=manoj.target\r\n        setPerson(\r\n            (prev)=>{\r\n                return{\r\n                    ...prev,\r\n                    [name]:value\r\n                }\r\n            }\r\n        )\r\n        //console.log(JSON.stringify(person))\r\n    }\r\n\r\n    return(\r\n        <>\r\n            <div className=\"container-fluid mt-5\">\r\n                <h1 className=\"text-center text-info display-4 text-uppercase font-monospace\">Edit Recruitment</h1>\r\n                <div className=\"row justify-content-center\">\r\n                    <div className=\"col-lg-7 col-md-10 col-sm-12 shadow-lg p-3\">\r\n                        <div className=\"form group\">\r\n                            <label>Resource Name</label>\r\n                            <input type=\"text\" \r\n                                name=\"resName\" \r\n                                onChange={track}\r\n                                value={person.resName}\r\n                                placeholder=\"Name of the resource person\"\r\n                                className=\"form-control\"\r\n                            />\r\n                        </div>\r\n                        \r\n                        <div className=\"row justify-content-between\">\r\n                            <div className=\"col-md-6 col-sm-12\">\r\n                                <label>Resource Commercial</label>\r\n                                <input\r\n                                    onChange={track}\r\n                                    type=\"text\"\r\n                                    value={person.resPay}\r\n                                    name=\"resPay\"\r\n                                    placeholder=\"Commercial perday of the resource person\"\r\n                                    className=\"form-control\"\r\n                                />\r\n                            </div>\r\n                            <div className=\"col-md-6 col-sm-12\">\r\n                                <label>Resource Location</label>\r\n                                <select name=\"resArea\" \r\n                                    className=\"form-select\" \r\n                                    onChange={track}\r\n                                    value={person.resArea}>\r\n                                    <option>Select Location</option>\r\n                                    <option>Chennai</option>\r\n                                    <option>Banglore</option>\r\n                                    <option>Salem</option>\r\n                                    <option>Other</option>\r\n                                </select>\r\n                            </div>\r\n                        </div>\r\n                        \r\n                        <div className=\"form-group\">\r\n                            <label>Resource person skills</label>\r\n                            <textarea className=\"form-control\" \r\n                            name=\"resSkills\" \r\n                            value={person.resSkills} \r\n                            onChange={track}>\r\n\r\n                            </textarea>\r\n                        </div>\r\n\r\n                        <div className=\"mt-4 row justify-content-around\">\r\n                            <button onClick={gopi} className=\"col-2 btn btn-outline-success\">Change</button>\r\n                            <button onClick={dhana} className=\"col-2 btn btn-outline-danger\">Cancel</button>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}","D:\\Fullstack\\project1\\front-end\\src\\Connect.js",[],[],{"ruleId":"110","replacedBy":"111"},{"ruleId":"112","replacedBy":"113"},{"ruleId":"114","severity":1,"message":"115","line":1,"column":8,"nodeType":"116","messageId":"117","endLine":1,"endColumn":14},{"ruleId":"114","severity":1,"message":"118","line":4,"column":7,"nodeType":"116","messageId":"117","endLine":4,"endColumn":10},{"ruleId":"110","replacedBy":"119"},{"ruleId":"112","replacedBy":"120"},{"ruleId":"121","severity":1,"message":"122","line":9,"column":9,"nodeType":"123","endLine":9,"endColumn":41},{"ruleId":"110","replacedBy":"124"},{"ruleId":"112","replacedBy":"125"},{"ruleId":"114","severity":1,"message":"126","line":4,"column":10,"nodeType":"116","messageId":"117","endLine":4,"endColumn":17},{"ruleId":"127","severity":2,"message":"128","line":27,"column":22,"nodeType":"129","messageId":"130","endLine":27,"endColumn":30},{"ruleId":"114","severity":1,"message":"131","line":4,"column":10,"nodeType":"116","messageId":"117","endLine":4,"endColumn":16},{"ruleId":"114","severity":1,"message":"132","line":4,"column":18,"nodeType":"116","messageId":"117","endLine":4,"endColumn":28},{"ruleId":"114","severity":1,"message":"133","line":4,"column":30,"nodeType":"116","messageId":"117","endLine":4,"endColumn":34},{"ruleId":"114","severity":1,"message":"134","line":4,"column":36,"nodeType":"116","messageId":"117","endLine":4,"endColumn":40},{"ruleId":"114","severity":1,"message":"135","line":4,"column":42,"nodeType":"116","messageId":"117","endLine":4,"endColumn":46},{"ruleId":"114","severity":1,"message":"136","line":3,"column":9,"nodeType":"116","messageId":"117","endLine":3,"endColumn":15},{"ruleId":"114","severity":1,"message":"133","line":3,"column":17,"nodeType":"116","messageId":"117","endLine":3,"endColumn":21},{"ruleId":"137","severity":1,"message":"138","line":13,"column":21,"nodeType":"139","messageId":"140","endLine":13,"endColumn":32},{"ruleId":"114","severity":1,"message":"134","line":2,"column":10,"nodeType":"116","messageId":"117","endLine":2,"endColumn":14},{"ruleId":"114","severity":1,"message":"141","line":2,"column":10,"nodeType":"116","messageId":"117","endLine":2,"endColumn":15},{"ruleId":"114","severity":1,"message":"142","line":9,"column":11,"nodeType":"116","messageId":"117","endLine":9,"endColumn":14},{"ruleId":"114","severity":1,"message":"143","line":9,"column":15,"nodeType":"116","messageId":"117","endLine":9,"endColumn":21},{"ruleId":"144","severity":1,"message":"145","line":20,"column":39,"nodeType":"146","messageId":"147","endLine":20,"endColumn":41},{"ruleId":"148","severity":1,"message":"149","line":27,"column":7,"nodeType":"150","endLine":27,"endColumn":9,"suggestions":"151"},"no-native-reassign",["152"],"no-negated-in-lhs",["153"],"no-unused-vars","'Return' is defined but never used.","Identifier","unusedVar","'yet' is assigned a value but never used.",["152"],["153"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement",["152"],["153"],"'Recruit' is defined but never used.","react/jsx-no-undef","'Recruite' is not defined.","JSXIdentifier","undefined","'byName' is defined but never used.","'fetchExact' is defined but never used.","'list' is defined but never used.","'read' is defined but never used.","'wash' is defined but never used.","'create' is defined but never used.","no-array-constructor","The array literal notation [] is preferable.","NewExpression","preferLiteral","'alter' is defined but never used.","'pos' is assigned a value but never used.","'setPos' is assigned a value but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'person'. Either include it or remove the dependency array.","ArrayExpression",["154"],"no-global-assign","no-unsafe-negation",{"desc":"155","fix":"156"},"Update the dependencies array to be: [person]",{"range":"157","text":"158"},[771,773],"[person]"]